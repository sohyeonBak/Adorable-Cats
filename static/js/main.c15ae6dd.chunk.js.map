{"version":3,"sources":["components/darkmode.jsx","components/login/login.jsx","components/contents/home/catcontents.jsx","components/contents/home/catpicture.jsx","components/contents/home/loginmodal.jsx","components/contents/home/catlist.jsx","components/contents/home/home.jsx","components/contents/mypage/catdetail.jsx","components/contents/mypage/likedcats.jsx","components/contents/mypage/likedcatlist.jsx","components/contents/mypage/mypage.jsx","components/contents/contents.jsx","components/start.jsx","App.jsx","service/firebase.js","service/auth_service.js","index.js","service/thecat_api.js"],"names":["DarkMode","styleDark","setStyleDark","useState","dark","setDark","className","onClick","Login","authservice","history","useHistory","onLogin","e","value","target","innerHTML","login","then","data","userId","user","uid","push","pathname","state","id","CatContents","cats","setCatData","onImage","setListButton","handlerImage","useCallback","name","CatPicture","catImage","setAlretedModal","onHistoryState","like","handlerCats","pickedLikey","setPickedLikey","onModalClick","undefined","src","url","alt","breeds","LoginModal","onCancelModal","CatList","onCatsList","onCatImage","listButton","setLike","lovecat","origin","description","temperament","catData","alretModal","onListClick","image","class","map","Home","catfetch","initCats","setInitCats","initImage","setInitImage","useEffect","cat","pickCat","query","pickChangeCat","CatDetail","selectedCats","selected","onList","LikedCats","imagesCats","onClickCat","displayType","display","LikedCatList","catsHistory","images","MyPage","location","pickedImage","listStyle","setListStyle","console","log","Contents","useRouteMatch","path","historyState","showMyPage","setShowMyPage","setPickedImage","onLoginClick","onHomeClick","to","exact","choice","Start","props","App","classList","basename","process","firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","AuthService","providerName","authProvider","auth","signInWithPopup","myHeaders","Headers","append","this","requestOptions","method","headers","redirect","a","fetch","response","json","result","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c15ae6dd.chunk.js","sourcesContent":["import React, {  useState } from 'react';\nimport '../scss/darkmode.scss'\n\nconst DarkMode = ({styleDark, setStyleDark }) => {\n    const [dark, setDark] = useState('🌙 Dark Mode')\n    \n    const onDarkMode = () => {\n        setDark(dark==='🌙 Dark Mode' ? '☀️Light Mode' : '🌙 Dark Mode')\n        setStyleDark(styleDark==='Light' ? 'Dark' : 'Light')\n    }\n    \n    return(\n        <div className=\"darkmode\">\n            <button className=\"darkmodeBtn\" onClick={onDarkMode} >{dark}</button>       \n        </div>\n    )\n}\n\nexport default DarkMode","import React from 'react';\nimport { useHistory } from 'react-router';\nimport '../../scss/login.scss'\nconst Login = ({authservice}) => {\n    const history = useHistory();\n\n    const goToMain = (userId) =>{\n        history.push({\n            pathname: '/home',\n            state: {id: userId}\n        })\n    }\n\n    const onLogin = (e) => {\n        const value = e.target.innerHTML\n        authservice.login(value).then(data => goToMain(data.user.uid))\n    }\n\n    const onNoLogin = () => {\n        history.push({\n            pathname: '/home'\n        })\n    }\n    \n    return(\n        <>\n        <div className=\"logincontent\">\n            <h1>Adoroble Cats</h1>\n            <div className=\"kindlogin\">\n                <button onClick={onLogin} >Google</button>\n                <button onClick={onLogin} >Github</button>\n            </div>\n            <button className=\"nologin\" onClick={onNoLogin} >I don’t want login</button>\n        </div>\n        </>\n    )}\n\nexport default Login;","import React, { useCallback } from 'react';\n\nconst CatContents = ({cats, setCatData, onImage, setListButton}) => {\n    \n    const handlerImage = useCallback(() => {\n        const value = cats.id\n        onImage(value)\n    },[onImage, cats.id])\n\n    const onClick = useCallback(()=>{\n        setCatData({\n            ...cats,\n            })\n        handlerImage()\n        setListButton(false)\n        \n    },[setCatData, cats, handlerImage, setListButton])\n\n   \n    return(\n         <li><button onClick={onClick}>{cats.name}</button></li> \n    )\n}\n\nexport default CatContents;","import React, { useCallback, useState } from 'react';\n\nconst CatPicture = ({catImage, setAlretedModal, onHistoryState, like, handlerCats }) => {\n    const [pickedLikey, setPickedLikey] = useState('favorite_border')\n    \n    const onModalClick = useCallback((e)=>{\n        if(onHistoryState===undefined){\n            setAlretedModal(true)\n        } else {\n            setPickedLikey('favorite')\n        }\n        \n        handlerCats(catImage)\n    },[onHistoryState, setAlretedModal, handlerCats, catImage])\n\n    \n    return(\n        <li className=\"listPic\">\n            <img src={catImage.url} alt={catImage.breeds.id} />\n            <span className=\"material-icons like\" onClick={onModalClick} >{onHistoryState===undefined ? `${like}`: `${pickedLikey}` }</span>\n        </li>    \n    );}\n\nexport default CatPicture;","import React, { useCallback } from 'react';\nimport { useHistory } from 'react-router';\n\nconst LoginModal = ({setAlretedModal}) => {\n    const history = useHistory();\n    const onCancelModal = useCallback(()=>{\n        setAlretedModal(false)\n    },[setAlretedModal])\n\n    const onLoginClick = () => {\n        history.push({\n            pathname : '/login'\n        })\n    }\n    return(\n        <div className=\"alretModal\">\n            <div className=\"modalcontents\">\n                <p>You need to login<br />if you want to save this picture. </p>\n                <button className=\"nologin\" onClick={onCancelModal}>No, Thanks</button>\n                <button className=\"onlogin\" onClick={onLoginClick}>Log in</button>\n            </div>\n        </div>       \n    )}\n\nexport default LoginModal;","import React, { useCallback, useState } from 'react';\nimport CatContents from './catcontents';\nimport CatPicture from './catpicture';\nimport LoginModal from './loginmodal';\nimport '../../../scss/home.scss';\n\n\n\nconst CatList = ({onCatsList, onCatImage, onImage, onHistoryState, listButton, setListButton, like, setLike, lovecat }) => {\n    const [catData, setCatData] = useState({\n        origin : \"Egypt\",\n        name : \"Abyssinian\",\n        description : \"The Abyssinian is easy to care for, and a joy to have in your home. They’re affectionate cats and love both people and other animals.\",\n        temperament: \"Active, Energetic, Independent, Intelligent, Gentle\"\n    });\n    \n    const [ alretModal, setAlretedModal ] = useState(false);\n    \n    const onListClick = useCallback(()=>{\n        setListButton(true)\n    },[])\n\n    \n    const handlerCats = (image) => {\n        lovecat(image)\n    }\n    \n    return(\n        <section>\n            <div className=\"catlistBtn\">\n                <p>Choice  your cats!</p>\n                <button className=\"listBtn\" onClick={onListClick} >\n                    <em className=\"listTitle\">{catData.name}</em>\n                    <span class=\"material-icons\">\n                        arrow_drop_down\n                    </span>\n                </button>   \n                <div className=\"listOption\">\n                    {listButton&&\n                    <ul className=\"options\">\n                        {onCatsList.map(cats=>\n                            <CatContents \n                                key={cats.id} \n                                cats={cats} \n                                catData={catData} \n                                setCatData={setCatData} \n                                onImage={onImage} \n                                setListButton={setListButton} \n                            />\n                        )}\n                    </ul>}\n                </div>         \n            </div>\n            \n            <div className=\"catpicturelist\">\n                <ul className=\"catslist\" >\n                    {onCatImage.map(image=>\n                        <CatPicture \n                            key={image.id} \n                            catImage={image} \n                            setAlretedModal={setAlretedModal} \n                            onHistoryState={onHistoryState}\n                            like={like} \n                            setLike={setLike}\n                            handlerCats={handlerCats}\n                        />\n                    )}\n                </ul>\n            </div>\n            \n            \n\n            <div className=\"catsubscribe\">\n                <div className=\"catscontents\">\n                    <p className=\"origin\">{catData.origin}</p>\n                    <h3 className=\"name\">{catData.name}</h3>\n                    <p className=\"subs\">{catData.description}</p>\n                    <em className=\"tempt\">{catData.temperament}</em>\n                </div>\n            </div>\n            {alretModal&&<LoginModal setAlretedModal={setAlretedModal} />}  \n        </section>\n    )}\n\nexport default CatList;","import React, { useCallback, useEffect, useState } from 'react';\n\nimport CatList from './catlist';\n\n\nconst Home = ({catfetch, onHistoryState, listButton, setListButton, like, setLike, lovecat }) => {\n    const [ initCats, setInitCats ] = useState([]);\n    const [ initImage, setInitImage ] = useState([]);\n\n    useEffect(()=>{\n        catfetch.cat().then(initCats=>setInitCats(initCats))\n      },[catfetch]);\n\n      useEffect(()=>{\n          return () => setInitCats(false)\n      },[])\n    useEffect(()=>{\n        catfetch.pickCat().then(initImage => setInitImage(initImage))\n    },[catfetch])\n\n    const onImage = useCallback(query=>{\n        catfetch.pickChangeCat(query).then(initImage=> setInitImage(initImage))\n    },[catfetch])\n\n    return(\n        <>\n            \n            <CatList \n                onCatsList={initCats} \n                onImage={onImage} \n                onCatImage={initImage}\n                onHistoryState={onHistoryState}\n                like={like} \n                setLike={setLike}\n                lovecat={lovecat}\n                listButton={listButton}\n                setListButton={setListButton}\n            />\n            \n        </>\n    )\n}\n\nexport default Home;","import React, { useCallback } from 'react';\n\nconst CatDetail = ({selectedCats, selected}) => {\n    \n    const onList = useCallback(()=>{\n        selected(null)\n    },[])\n\n    return(\n        <div className=\"detailsection\">\n            <img src={selectedCats.url} />\n            <div className=\"catscontents\">\n                <p className=\"origin\">{selectedCats.breeds[0].origin}</p>\n                <h3 className=\"name\">{selectedCats.breeds[0].name}</h3>\n                <p className=\"subs\">{selectedCats.breeds[0].description}</p>\n                <em className=\"tempt\">{selectedCats.breeds[0].temperament}</em>\n            </div>\n            <button onClick={onList}>\n                go to list\n                <span class=\"material-icons\">arrow_right_alt</span>\n            </button>\n        </div>\n    );}\n\nexport default CatDetail;","import React from 'react';\n\nconst LikedCats = ({imagesCats, onClickCat, display}) => {\n    const displayType = (display) === 'list' ? 'catsgrid' : 'catslist'\n    \n    return(\n       <li className={displayType} onClick={()=>{onClickCat(imagesCats)}}>\n           <img src={imagesCats.url} alt=\"\"/>\n           <span>{imagesCats.breeds[0].name}</span>\n       </li>   \n    )}\n\nexport default LikedCats;","import React from 'react';\nimport LikedCats from './likedcats';\n\nconst LikedCatList = ({catsHistory, onClickCat, display}) => (\n    <div className=\"listsection\">\n        <ul className=\"catimage\">\n            {catsHistory&&catsHistory.map(images=><LikedCats key={images.id} imagesCats={images} onClickCat={onClickCat} display={display} />)}\n        </ul> \n    </div>\n       \n    );\n\nexport default LikedCatList;","import React, { useCallback, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport '../../../scss/mypage.scss'\nimport CatDetail from './catdetail';\nimport LikedCatList from './likedcatlist';\n\nconst MyPage = ({styleDark}) => {\n    const catsHistory = useHistory().location.pickedImage\n    const [ listStyle, setListStyle ] = useState(null)\n\n    const selected = (cats) => {\n        setListStyle(cats)\n    }\n    console.log(listStyle)\n    return( \n        <section className=\"saveimage\">\n            <div className=\"imagecontents\">\n                <h2>Adorable my cats</h2>\n                <div className=\"likezone\">\n                    {listStyle&&(\n                        <CatDetail \n                            selectedCats={listStyle}\n                            selected={selected}\n                        />\n                    )}\n                    <LikedCatList \n                        catsHistory={catsHistory} \n                        onClickCat={selected}\n                        display={listStyle ? 'grid' : 'list'} \n                    />\n                </div>\n            </div>\n        </section>\n\n    )}\n\nexport default MyPage;","import React, { useCallback, useEffect, useState } from 'react';\nimport { Route, useHistory, useRouteMatch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport Home from './home/home';\nimport MyPage from './mypage/mypage';\nimport '../../scss/header.scss';\n\nconst Contents = ({catfetch, listButton, setListButton, styleDark}) => {\n    const {path, url} = useRouteMatch()\n    const history = useHistory();\n    const historyState = useHistory().location.state\n\n    const [showMyPage, setShowMyPage] = useState(false)\n    const [ like, setLike ] = useState('favorite_border');\n    const [ pickedImage, setPickedImage ] = useState([])\n    \n    useEffect(()=>{\n        if(historyState===undefined){\n            setShowMyPage(false)\n        }else if(historyState!==undefined){\n            setShowMyPage(true)\n        }\n    },[historyState])\n\n    const onLoginClick = useCallback((e) =>{\n        if(historyState===undefined){\n            history.push({\n                pathname : '/login'\n            })\n            \n        }else if(historyState!==undefined){\n            history.push({\n                pathname : '/home',\n                state : undefined\n            })\n            setShowMyPage(false)\n            setLike('favorite_border')\n        }\n    },[history,historyState])\n\n    const onHomeClick = useCallback(()=>{\n        history.push({\n            pathname: '/home',\n            state : historyState\n        })\n        \n    },[history,historyState])\n    \n    const lovecat = (cat) =>{\n        setPickedImage(cats => {\n            const choice = [...cats]\n            choice.push(cat)\n            return choice\n            })\n    }\n    \n    \n\n    return(\n        <>  \n            <header >\n                <div className=\"header\">\n                    <h1 className=\"mainTitle\" onClick={onHomeClick}>Adorable Cats</h1>\n                    <span className=\"login\" onClick={onLoginClick}>{historyState===undefined?\"Log in\" : \"Log out\"}</span>\n                    {showMyPage&&\n                        <Link className=\"personalPage\" to={{\n                            pathname:`${url}/mypage`,\n                            state : historyState, pickedImage\n\n                        }}>\n                            <span className=\"material-icons personal \">perm_identity</span>\n                        </Link>\n                    }\n                </div>\n            </header>\n            <Route exact path={path}>\n                <Home \n                    catfetch={catfetch} \n                    onHistoryState={historyState} \n                    like={like} \n                    setLike={setLike} \n                    setPickedImage={setPickedImage}\n                    lovecat={lovecat}\n                    listButton={listButton}\n                    setListButton={setListButton}\n                    />\n            </Route>\n            <Route path={`${path}/:id`} >\n                <MyPage styleDark={styleDark} />\n            </Route>\n        </>\n    );}\n\nexport default Contents;","import React from 'react';\nimport { useHistory } from 'react-router';\nimport '../scss/start.scss'\nconst Start = (props) => {\n    const history = useHistory();\n\n    const onStart = () => {\n        history.push({\n            pathname: '/home'\n        })\n    }\n    return(\n        <div className=\"starter\">\n            <button className=\"startcon\" onClick={onStart} >🐈 Adorable Cats's Start</button>\n        </div>        \n    );}\n\nexport default Start;","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport DarkMode from './components/darkmode'\nimport Login from './components/login/login'\nimport Contents from \"./components/contents/contents\";\nimport './App.scss'\nimport { useState } from \"react\";\nimport Start from \"./components/start\";\n\n\nfunction App({catfetch, authservice}) {\n  const [ listButton, setListButton ] = useState(false);\n  const [ styleDark, setStyleDark ] = useState('Light')\n  \n  const offlistClick = (e) => {\n    if(e.target.classList[0]!==\"listBtn\" && e.target.classList[0]!== \"listTitle\"){\n      setListButton(false)\n    }\n  }\n\n  return(\n    <div className={`App ${styleDark}`} onClick={offlistClick}>\n      \n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n        <Route exact path=\"/\" >\n            <Start />\n          </Route>\n          <Route path=\"/home\" >\n            <Contents catfetch={catfetch} listButton={listButton} setListButton={setListButton} styleDark={styleDark} />\n          </Route>\n          <Route  path=\"/login\">\n            <Login authservice={authservice} />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n      <DarkMode styleDark={styleDark} setStyleDark={setStyleDark}  />\n\n    </div>\n  )\n}\n\nexport default App;","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDkX2IjY1Q7_JXYSk2r91wNlMdjzWWR2Eo\",\n    authDomain: \"adorable-cats.firebaseapp.com\",\n    projectId: \"adorable-cats\",\n    storageBucket: \"adorable-cats.appspot.com\",\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nexport default firebaseApp;","import firebase from 'firebase';\nimport firebaseApp from './firebase';\n\n\nclass AuthService {\n    login(providerName) {\n        const authProvider = new firebase.auth[`${providerName}AuthProvider`]()\n        return firebaseApp.auth().signInWithPopup(authProvider)\n    }\n}\n\nexport default AuthService","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport AuthService from './service/auth_service';\nimport CatFetch from './service/thecat_api';\n\n\nconst catfetch = new CatFetch()\nconst authservice = new AuthService();\nReactDOM.render(\n  <React.StrictMode>\n    <App catfetch={catfetch} authservice={authservice}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","class CatFetch{\n    constructor(){\n        let myHeaders = new Headers();\n        let catsApi = process.env.REACT_APP_THE_CATS_API_KEY;\n        myHeaders.append(\"key\", catsApi);\n\n        this.requestOptions = {\n            method: 'GET',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n    }\n\n    async cat(){\n        const response = await fetch(\"https://api.thecatapi.com/v1/breeds\", this.requestOptions)\n        const result = await response.json();\n        return result;\n    }\n\n    async likedCat(query){\n        const response = await fetch(`https://api.thecatapi.com/v1/images/search?id=${query}`, this.requestOptions)\n        const result = await response.json();\n        return result;\n    }\n\n    async pickCat(){\n        const response = await fetch(\"https://api.thecatapi.com/v1/images/search?breed_ids=abys&limit=7\", this.requestOptions)\n        const result = await response.json();\n        return result;\n    }\n\n    async pickChangeCat(query){\n        const response = await fetch(`https://api.thecatapi.com/v1/images/search?breed_ids=${query}&limit=7`, this.requestOptions)\n        const result = await response.json();\n        return result;\n    }\n\n}\n\nexport default CatFetch;"],"sourceRoot":""}